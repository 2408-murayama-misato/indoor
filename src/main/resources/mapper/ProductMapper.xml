<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.indoor.mapper.ProductMapper">
    <select id="find" resultType="com.example.indoor.entity.Product">
        SELECT * FROM products WHERE id = #{id}
    </select>
    <select id="findById" resultMap="Product">
        SELECT *
        FROM products
        WHERE id = ${productId}
    </select>
    <resultMap id="Product" type="com.example.indoor.entity.Product">
        <result column="id" property="id"/>
        <result column="account_id" property="accountId"/>
        <result column="name" property="name"/>
        <result column="price" property="price"/>
        <result column="category" property="category"/>
        <result column="stock" property="stock"/>
        <result column="isStopped" property="isStopped"/>
        <result column="description" property="description"/>
        <result column="created_date" property="createdDate"/>
        <result column="updated_date" property="updatedDate"/>
        <result column="avg" property="avg"/>
        <collection property="productImage" resultMap="productImage"/>
    </resultMap>
<!--    リレーション用商品イメージマスタ-->
    <resultMap id="productImage" type="com.example.indoor.entity.ProductImage">
        <result column="id" property="id"/>
        <result column="product_id" property="productId"/>
        <result column="pass" property="pass"/>
        <result column="created_date" property="createdDate"/>
        <result column="updated_date" property="updatedDate"/>
    </resultMap>
    <!-- 内部結合 -->
    <resultMap id="productDetail" type="com.example.indoor.entity.Product">
        <result column="id" property="id" />
        <result column="account_id" property="accountId" />
        <result column="account_name" property="accountName" />
        <result column="product_name" property="name" />
        <result column="price" property="price" />
        <result column="category" property="category" />
        <result column="stock" property="stock" />
        <result column="is_stopped" property="isStopped" />
        <result column="description" property="description" />
    </resultMap>
    <select id="findProductDetail" resultMap="productDetail">
        SELECT
        products.id AS id,
        products.account_id AS account_id,
        accounts.name AS account_name,
        products.name AS product_name,
        products.price AS price,
        products.category AS category,
        products.stock AS stock,
        products.is_stopped AS is_stopped,
        products.description AS description
        FROM products
        INNER JOIN accounts
        ON accounts.id = products.account_id
        WHERE products.id = #{id}
    </select>

<!--    商品検索-->
    <select id="findAll" resultMap="Product">
        SELECT *  FROM products
        INNER JOIN product_images
        ON products.id = product_images.product_id
        INNER JOIN (SELECT product_id as avg_product_id ,AVG(score) FROM reviews GROUP BY product_id)
        ON products.id = avg_product_id
        <where>
             <if test="searchForm.getKeyWord() != null and searchForm.getKeyWord().trim() != ''">
                products.category LIKE '%${searchForm.keyWord}%'OR products.name LIKE '%${searchForm.keyWord}%'
             </if>
            <if test="searchForm.getCategory() != null and searchForm.getCategory().trim() != ''">
                and products.category = '${searchForm.getCategory()}'
            </if>
            <if test="searchForm.getMinPrice() != null and searchForm.getMinPrice().trim() != '' and
                      searchForm.getMaxPrice() != null and searchForm.getMaxPrice().trim() != ''">
                and products.price BETWEEN ${searchForm.getMinPrice()} AND ${searchForm.getMaxPrice()}
            </if>
            <if test="searchForm.getMinPrice() != null and searchForm.getMinPrice().trim() != '' and
                      (searchForm.getMaxPrice() == null or searchForm.getMaxPrice().trim() == '')">
                and products.price BETWEEN ${searchForm.getMinPrice()} AND 1000000
            </if>
            <if test="(searchForm.getMinPrice() == null or searchForm.getMinPrice().trim() == '') and
                      searchForm.getMaxPrice() != null and searchForm.getMaxPrice().trim() != ''">
                and products.price BETWEEN 1 AND ${searchForm.getMaxPrice()}
            </if>
        </where>
    </select>
</mapper>