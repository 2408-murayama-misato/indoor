<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.indoor.mapper.AccountMapper">


    <resultMap id="account" type="com.example.indoor.entity.Account">
        <result column="id" property="id"/>
        <result column="account" property="account"/>
        <result column="password" property="password"/>
        <result column="name" property="name"/>
        <result column="address" property="address"/>
        <result column="credit" property="credit"/>
        <result column="role" property="role"/>
        <result column="is_stopped" property="isStopped"/>
        <result column="created_date" property="createdDate"/>
        <result column="updated_date" property="updatedDate"/>
    </resultMap>


    <select id="findByAccount" resultMap="account">
        select *
        from accounts
        where account = #{account}
    </select>
    <!-- アカウント情報追加 -->
    <insert id="save">
        insert into accounts(account, password, name, address, credit, role, is_stopped)
        values (#{account}, #{password}, #{name}, #{address}, #{credit}, #{role}, #{isStopped})
    </insert>
    <!-- アカウント情報取得 -->
    <select id="findById" resultMap="account">
        select *
        from accounts
        where id = #{id}
    </select>
    <!-- アカウント情報追加 -->
    <update id="update" parameterType="com.example.indoor.entity.Account">
        update accounts
        <set>
            <if test="account != '' and account != null">
                account = #{account},
            </if>
            <if test="password != '' and password != null">
                password = #{password},
            </if>
            <if test="name != '' and name != null">
                name = #{name},
            </if>
            <if test="address != '' and address != null">
                address = #{address},
            </if>
            <if test="credit != '' and credit != null">
                credit = #{credit},
            </if>
            <if test="role != '' and role != null">
                role = #{role},
            </if>
            <if test="isStopped != '' and isStopped != null">
                is_stopped = #{isStopped},
            </if>
        </set>
        where id = #{id}
    </update>
    <!-- アカウント削除 -->
    <delete id="deleteById">
        delete from accounts
        where id = #{id}
    </delete>
    <select id="findAllUser" resultMap="accounts">
        SELECT * FROM accounts
        WHERE role = #{status}
        <if test="account != null and account.trim() != ''">
            and account LIKE '%${account}%'
        </if>
        ORDER BY created_date DESC
    </select>
<!--    アカウント停止-->
    <update id="stopAccount" >
        UPDATE accounts SET
        is_stopped = 1
        WHERE id = #{id};
    </update>
<!--アカウント復活-->
    <update id="activeAccount" >
        UPDATE accounts SET
        is_stopped = 0
        WHERE id = #{id};
    </update>
    <resultMap id="accounts" type="com.example.indoor.entity.Account">
        <result column="id" property="id"/>
        <result column="account" property="account"/>
        <result column="password" property="password"/>
        <result column="name" property="name"/>
        <result column="address" property="address"/>
        <result column="credit" property="credit"/>
        <result column="role" property="role"/>
        <result column="is_stopped" property="isStopped"/>
        <result column="created_date" property="createdDate"/>
        <result column="updated_date" property="updatedDate"/>
    </resultMap>
</mapper>